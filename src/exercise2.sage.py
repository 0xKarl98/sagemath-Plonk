"""Exercise1 Link : 
https://plonk.zksecurity.xyz/1_Getting_started/3_A_constraint_system.html
"""


# This file was *autogenerated* from the file /Users/yuhang/sagemath-plonk/src/exercise2.sage
from sage.all_cmdline import *   # import sage library

_sage_const_1 = Integer(1); _sage_const_2 = Integer(2); _sage_const_3 = Integer(3); _sage_const_4 = Integer(4); _sage_const_0 = Integer(0); _sage_const_9 = Integer(9)
# Variable definitions from exercise1
I = [_sage_const_1 ,_sage_const_2 ,_sage_const_3 ,_sage_const_4 ]
LI = {_sage_const_1 :_sage_const_0 ,_sage_const_2 :_sage_const_1 ,_sage_const_3 :_sage_const_1 ,_sage_const_4 :_sage_const_3 }
RI = {_sage_const_1 :_sage_const_1 ,_sage_const_2 :_sage_const_1 ,_sage_const_3 :_sage_const_2 ,_sage_const_4 :_sage_const_3 }
O = {_sage_const_1 :_sage_const_1 ,_sage_const_2 :_sage_const_2 ,_sage_const_3 :_sage_const_3 ,_sage_const_4 :_sage_const_9 }  # O should be a dictionary with correct values

#Constraint 1
assert LI[_sage_const_1 ]== _sage_const_0  and RI[_sage_const_1 ]==_sage_const_1 

#Constraint 2
for i in I:
    if i != _sage_const_4 :
        assert LI[i] + RI[i] == O[i]
#Constraint 3
"""
In plain words , it means:
For any i that not equal to 3 or 4 , we have the following equation holds :
LI(i+1) = RI(i) and RI(i+1) = O(i)
"""
for i in I: 
    if i != _sage_const_3  and i != _sage_const_4 :
        assert LI[i+_sage_const_1 ] == RI[i] and RI[i+_sage_const_1 ] == O[i]

#Constraint 4
"""
In plain words , it means:
LI(4) = RI(4) = O(3) 

assert(LI[4] == RI[4] == O[3])
"""


#Constraint 5
"""
In plain words , it means:
LI(4) * RI(4) = O(4)
"""
assert(LI[_sage_const_4 ] * RI[_sage_const_4 ] == O[_sage_const_4 ])

